name: commercial_solvers
description: Set up commercial solvers in CI for testing purposes
inputs:
  token:
    description: GitHub token with access to the private repo
    required: true

runs:
  using: "composite"
  steps:
    - run: echo "$RUNNER_OS-$RUNNER_ARCH"
      shell: bash
    - uses: kanga333/variable-mapper@v0.3.0
      with:
        key: "${{runner.os}}-${{runner.arch}}"
        map: |
         {
            "Linux-X64": {"knitro": "knitro-13.2.0-Linux-64", "knitro_suffix": ".tar.gz", "cplex": "cos_installer_preview-22.1.1.0.R0-M08SWML-linux-x86-64", "cplex_suffix": ".bin"},
            "Windows-X64": {"knitro": "knitro-13.2.0-Win64", "knitro_suffix": ".zip", "cplex": "cos_installer_preview-22.1.1.0.R0-M08SVML-win-x86-64", "cplex_suffix": ".exe"},
            "macOS-X64": {"knitro": "knitro-13.2.0-MacOS-64", "knitro_suffix": ".tar.gz", "cplex": "cos_installer_preview-22.1.1.0.R0-M08SXML-osx", "cplex_suffix": ".zip"},
            "macOS-ARM64": {"knitro": "knitro-13.2.0-MacOS-ARM", "knitro_suffix": ".tar.gz", "cplex": "cos_installer_preview-22.1.1.0.R0-M08WYML-osx-arm64", "cplex_suffix": ".zip"}
         }
        export_to: env
    # Download protected release asset
    - uses: dsaltares/fetch-gh-release-asset@1.1.0
      with:
        repo: 'jgillis/restricted'
        file: ${{env.knitro}}${{env.knitro_suffix}}
        token: ${{ inputs.token }}
    - uses: dsaltares/fetch-gh-release-asset@1.1.0
      with:
        repo: 'jgillis/restricted'
        file: 'artelys_lic_5007_casadi-dev_2022-08-24.txt'
        token: ${{ inputs.token }}
    - run: tar -xzf ${{env.knitro}}.tar.gz -C $RUNNER_TEMP
      shell: bash
      if: runner.os != 'Windows'
    - run: unzip ${{env.knitro}}.zip -d $RUNNER_TEMP
      shell: bash
      if: runner.os == 'Windows'
    - run: cp artelys_lic_5007_casadi-dev_2022-08-24.txt $RUNNER_TEMP
      shell: bash
      
    # Add to PATH
    - run: |
        echo "LD_LIBRARY_PATH=$RUNNER_TEMP/${{env.knitro}}/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      if: runner.os == 'Linux'
      shell: bash
      
    # cfr. https://github.com/pypa/cibuildwheel/issues/816
    - run: |
        sudo cp $RUNNER_TEMP/${{env.knitro}}/lib/* /usr/local/lib
      if: runner.os == 'macOS'
      shell: bash
      
    - run: ls $RUNNER_TEMP/${{env.knitro}} && ls $RUNNER_TEMP/${{env.knitro}}/lib
      shell: bash
    - run: echo "$PATH"
      shell: bash
      
    - run: echo "PATH=$RUNNER_TEMP/${{env.knitro}}/lib;$PATH" >> $GITHUB_ENV
      if: runner.os == 'Windows'
      shell: bash
    - run: echo "LD_PRELOAD=$RUNNER_TEMP/${{env.knitro}}/lib/libiomp5.so"
      if: runner.os != 'Windows'
      shell: bash
    - run: echo "ARTELYS_LICENSE=$RUNNER_TEMP/artelys_lic_5007_casadi-dev_2022-08-24.txt" >> $GITHUB_ENV
      shell: bash

    #  CPLEX
    - uses: dsaltares/fetch-gh-release-asset@1.1.0
      with:
        repo: 'jgillis/restricted'
        file: ${{env.cplex}}${{env.cplex_suffix}}
        token: ${{ inputs.token }}
    - run: echo "CPLEX_VERSION=2211" >> $GITHUB_ENV
      shell: bash
    - run: |
          echo <<EOF > github_actions.properties
          INSTALLER_UI=silent
          LICENSE_ACCEPTED=TRUE
          USER_INSTALL_DIR=$RUNNER_TEMP/CPLEX
          INSTALLER_LOCALE=en
          CPLEX_STUDIO_FILE_ASSOCIATION=0
          CPLEX_STUDIO_PATH_UPDATE=0
          CPLEX_STUDIO_README=0
          CPLEX_STUDIO_IDE=0
          EOF
      shell: bash
    - run: |
        chmod +x ${{env.cplex}}${{env.cplex_suffix}}
        ./${{env.cplex}}${{env.cplex_suffix}} -f github_actions.properties
      if: runner.os == 'Linux'
      shell: bash
    - run: ${{env.cplex}}${{env.cplex_suffix}} -f github_actions.properties
      shell: cmd
      if: runner.os == 'Windows'
    # Add to PATH
    - run: |
        ls $RUNNER_TEMP/CPLEX
        ls $RUNNER_TEMP/CPLEX/cplex/bin/x86-64_linux
        echo "LD_LIBRARY_PATH=$RUNNER_TEMP/CPLEX/cplex/bin/x86-64_linux:$LD_LIBRARY_PATH" >> $GITHUB_ENV
      if: runner.os == 'Linux'
      shell: bash

    - run: |
            unzip ${{env.cplex}}.zip -d $RUNNER_TEMP
            $RUNNER_TEMP/cplex_studio${CPLEX_VERSION}-osx.app/contents/MacOS/cplex_studio${CPLEX_VERSION}-osx -f github_actions.properties
      shell: bash
      if: runner.os == 'macOS' && runner.arch == 'X64'
    - run: |
            unzip ${{env.cplex}}.zip -d $RUNNER_TEMP
            $RUNNER_TEMP/cplex_studio${CPLEX_VERSION}-osx-arm64.app/contents/MacOS/cplex_studio${CPLEX_VERSION}-osx-arm64 -f github_actions.properties
      shell: bash
      if: runner.os == 'macOS' && runner.arch == 'ARM64'
      
    - run: ls $RUNNER_TEMP/CPLEX
      if: runner.os == 'Linux'
      shell: bash
